"use strict";

exports.__esModule = true;
exports.FlexItemRoot = exports.FlexRoot = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _styles = require("../styles");

var _Box = _interopRequireDefault(require("../Box"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getAlignment = function getAlignment(value) {
  return ['start', 'end'].indexOf(value) !== -1 ? "flex-" + value : value;
};

var getJustification = function getJustification(value) {
  return ['around', 'between', 'evenly'].indexOf(value) !== -1 ? "space-" + value : getAlignment(value);
};

var getWidthValue = function getWidthValue(value) {
  return typeof value === 'number' && value < 1 && value !== 0 ? value * 100 + "%" : value;
};

var flexMapValueToProperty = function flexMapValueToProperty(property, value) {
  var map = {
    alignItems: getAlignment,
    display: function display(value) {
      return value === undefined || value === false ? 'flex' : 'inline-flex';
    },
    flexDirection: function flexDirection(value) {
      return value;
    },
    flexWrap: function flexWrap(value) {
      return value ? 'wrap' : value === false ? 'nowrap' : value;
    },
    justifyContent: getJustification
  };
  return map[property](value);
};

var FlexRoot = (
/*#__PURE__*/
0, _styledBase.default)(_Box.default, {
  shouldForwardProp: function shouldForwardProp(prop) {
    return ['direction', 'inline', 'wrap'].indexOf(prop) === -1;
  },
  target: "e7r6m60"
})(function (_ref) {
  var breakpoints = _ref.breakpoints,
      alignItems = _ref.alignItems,
      direction = _ref.direction,
      inline = _ref.inline,
      justifyContent = _ref.justifyContent,
      theme = _ref.theme,
      wrap = _ref.wrap;
  return (0, _styles.getResponsiveStyles)({
    breakpoints: breakpoints,
    mapValueToProperty: flexMapValueToProperty,
    styles: {
      alignItems: alignItems,
      display: inline,
      flexDirection: direction,
      flexWrap: wrap,
      justifyContent: justifyContent
    },
    theme: theme
  });
});
exports.FlexRoot = FlexRoot;

var flexItemMapValueToProperty = function flexItemMapValueToProperty(property, value) {
  var map = {
    alignSelf: function alignSelf(value) {
      return value === 'start' || value === 'end' ? "flex-" + value : value;
    },
    flexBasis: getWidthValue,
    flexGrow: function flexGrow(value) {
      return value;
    },
    flexShrink: function flexShrink(value) {
      return value;
    },
    minWidth: getWidthValue
  };
  return map[property](value);
};

var FlexItemRoot = (
/*#__PURE__*/
0, _styledBase.default)(_Box.default, {
  shouldForwardProp: function shouldForwardProp(prop) {
    return ['inline', 'minWidth', 'width'].indexOf(prop) === -1;
  },
  target: "e7r6m61"
})(function (_ref2) {
  var alignSelf = _ref2.alignSelf,
      breakpoints = _ref2.breakpoints,
      grow = _ref2.grow,
      minWidth = _ref2.minWidth,
      shrink = _ref2.shrink,
      theme = _ref2.theme,
      width = _ref2.width;
  return (0, _styles.getResponsiveStyles)({
    breakpoints: breakpoints,
    mapValueToProperty: flexItemMapValueToProperty,
    styles: {
      alignSelf: alignSelf,
      flexBasis: width || 'auto',
      flexGrow: grow,
      flexShrink: shrink,
      minWidth: minWidth
    },
    theme: theme
  });
});
exports.FlexItemRoot = FlexItemRoot;