import { arrayOf, bool, element, func, node, oneOf, oneOfType, shape, string } from 'prop-types';
import { ACTIONS_SIZE, APPEARANCE, ELEMENT, SIZE, VARIANT } from "./constants";
var variant = oneOf(Object.keys(VARIANT));
export var dialogPropTypes = {
  actions: arrayOf(shape({
    text: string.isRequired,
    size: oneOf(Object.keys(ACTIONS_SIZE))
  })),
  appSelector: string,
  'aria-label': string,
  children: node,
  closeButtonLabel: string,
  closeOnEscape: bool,
  closeOnClickOutside: bool,
  disableFocusOnOpen: bool,
  disableFocusTrap: bool,
  hideOverlay: bool,
  id: string,
  isOpen: bool,
  modeless: bool,
  onClose: func,
  onOpen: func,
  preventCloseButtonClose: bool,
  showCloseButton: bool,
  size: oneOf(Object.keys(SIZE)),
  title: oneOfType([string, element]),
  usePortal: bool,
  variant: variant
};
export var dialogActionsPropTypes = {
  children: oneOfType([element, arrayOf(element)]),
  variant: variant
};
export var dialogBodyPropTypes = {
  children: node
};
export var dialogFooterPropTypes = {
  children: node
};
export var dialogHeaderPropTypes = {
  children: node,
  closeButton: node
};
export var dialogTitlePropTypes = {
  appearance: oneOf(Object.keys(APPEARANCE)),
  as: oneOf(Object.keys(ELEMENT)),
  children: node.isRequired,
  id: string,
  variant: variant
};