import { jsx as ___EmotionJSX } from "@emotion/core";

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { cloneElement } from 'react';
import Button from "../Button";
import { findAllByType } from "../utils/children";
import { DialogActionsRoot as Root } from "./styled";
import { dialogActionsPropTypes } from "./propTypes";

var DialogActions = function DialogActions(props) {
  var children = props.children,
      variant = props.variant,
      rootProps = _objectWithoutPropertiesLoose(props, ["children", "variant"]);

  var actions = findAllByType(children, Button);

  if (actions && actions.length) {
    var lastIndex = actions.length - 1;
    actions = actions.map(function (action, index) {
      var props = action.props;
      return cloneElement(action, {
        key: index,
        minimal: props.minimal !== undefined ? props.minimal : index !== lastIndex,
        primary: props.primary !== undefined ? props.primary : index === lastIndex,
        variant: props.variant !== undefined ? props.variant : index === lastIndex ? variant : undefined
      });
    });
  }

  return ___EmotionJSX(Root, rootProps, actions);
};

DialogActions.displayName = 'DialogActions';
DialogActions.propTypes = process.env.NODE_ENV !== "production" ? dialogActionsPropTypes : {};
export default DialogActions;