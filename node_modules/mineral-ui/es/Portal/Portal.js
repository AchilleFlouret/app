function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { Component } from 'react';
import { createPortal } from 'react-dom';
import { canUseDOM } from 'exenv';

var Portal =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(Portal, _Component);

  function Portal(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _defineProperty(_assertThisInitialized(_this), "node", void 0);

    if (canUseDOM) {
      _this.node = document.createElement('div');
    }

    return _this;
  }

  var _proto = Portal.prototype;

  _proto.componentDidMount = function componentDidMount() {
    canUseDOM && document.body && this.node && document.body.appendChild(this.node);
  };

  _proto.componentWillUnmount = function componentWillUnmount() {
    canUseDOM && document.body && this.node && document.body.removeChild(this.node);
  };

  _proto.render = function render() {
    return canUseDOM && this.node ? createPortal(this.props.children, this.node) : null;
  };

  return Portal;
}(Component);

_defineProperty(Portal, "displayName", 'Portal');

export { Portal as default };