import { jsx as ___EmotionJSX } from "@emotion/core";

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import withForwardRef from "../utils/withForwardRef";
import Popper from "../Popover/RtlPopper";
import { DropdownContentWrapper } from "./styled";

var DropdownContent =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(DropdownContent, _Component);

  function DropdownContent() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = DropdownContent.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        forwardedRef = _this$props.forwardedRef,
        modifiers = _this$props.modifiers,
        placement = _this$props.placement,
        positionFixed = _this$props.positionFixed,
        restProps = _objectWithoutPropertiesLoose(_this$props, ["children", "forwardedRef", "modifiers", "placement", "positionFixed"]);

    var popperProps = {
      modifiers: modifiers,
      placement: placement,
      positionFixed: positionFixed
    };
    return ___EmotionJSX(Popper, popperProps, function (_ref) {
      var outOfBoundaries = _ref.outOfBoundaries,
          placement = _ref.placement,
          popperRef = _ref.ref,
          style = _ref.style;

      var dropdownContentWrapperProps = _objectSpread({
        'data-placement': placement,
        'data-out-of-boundaries': outOfBoundaries || undefined,
        ref: function ref(node) {
          forwardedRef && forwardedRef(node);
          popperRef(node);
        },
        style: style
      }, restProps);

      return ___EmotionJSX(DropdownContentWrapper, dropdownContentWrapperProps, children);
    });
  };

  return DropdownContent;
}(Component);

_defineProperty(DropdownContent, "displayName", 'DropdownContent');

export default withForwardRef(DropdownContent);