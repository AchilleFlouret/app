function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

export var avatarTheme = function avatarTheme(baseTheme) {
  return _objectSpread({
    Avatar_fontSize_small: baseTheme.fontSize_mouse,
    Avatar_fontSize_medium: baseTheme.fontSize_ui,
    Avatar_fontSize_large: baseTheme.h4_fontSize,
    Avatar_fontSize_jumbo: baseTheme.h4_fontSize,
    Avatar_fontWeight: baseTheme.fontWeight_bold,
    Avatar_size_small: baseTheme.size_small,
    Avatar_size_medium: baseTheme.size_medium,
    Avatar_size_large: baseTheme.size_large,
    Avatar_size_jumbo: baseTheme.size_jumbo
  }, baseTheme);
};