import { jsx as ___EmotionJSX } from "@emotion/core";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { withTheme } from 'emotion-theming';
import Text, { textWithThemeOverrides } from "../Text";
import { TableTitleRoot as Root } from "./styled";

var TableTitle = function TableTitle(_ref) {
  var as = _ref.as,
      hide = _ref.hide,
      id = _ref.id,
      theme = _ref.theme,
      restProps = _objectWithoutPropertiesLoose(_ref, ["as", "hide", "id", "theme"]);

  var rootProps = _objectSpread({
    hide: hide
  }, restProps); // eslint-disable-next-line react/display-name


  var TitleContent = function TitleContent(props) {
    return ___EmotionJSX(Text, _extends({
      align: "start",
      id: id
    }, props));
  };

  var title = textWithThemeOverrides(_objectSpread({
    as: as,
    displayName: 'TableTitle',
    textComponent: TitleContent,
    theme: theme
  }, restProps));
  return ___EmotionJSX(Root, rootProps, title);
};

TableTitle.displayName = 'TableTitle';
export default withTheme(TableTitle);