import { jsx as ___EmotionJSX } from "@emotion/core";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import Sortable from "./Sortable";
import TableBase from "./TableBase";

var SortableTable = function SortableTable(props) {
  return ___EmotionJSX(Sortable, _extends({}, props, {
    isSortable: props.sortable
  }), function (props) {
    var ignoreOnSort = props.onSort,
        restProps = _objectWithoutPropertiesLoose(props, ["onSort"]);

    return ___EmotionJSX(TableBase, _extends({}, restProps, {
      data: props.sortable.data
    }));
  });
};

SortableTable.displayName = 'SortableTable';
export default SortableTable;