import mineralTheme from "./mineralTheme";

var filterKeys = function filterKeys(source, exclusions) {
  return exclusions.length ? Object.keys(source).reduce(function (acc, key) {
    if (exclusions.indexOf(key) === -1) {
      acc[key] = source[key];
    }

    return acc;
  }, {}) : source;
};

export var getProcessedComponentThemeKeys = function getProcessedComponentThemeKeys(componentTheme, options) {
  if (options === void 0) {
    options = {};
  }

  return Object.keys(processComponentTheme(componentTheme, options));
};
export default function processComponentTheme(componentThemeIn, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$baseTheme = _options.baseTheme,
      baseTheme = _options$baseTheme === void 0 ? mineralTheme : _options$baseTheme,
      _options$excludeKeys = _options.excludeKeys,
      excludeKeys = _options$excludeKeys === void 0 ? [] : _options$excludeKeys,
      includeBaseTheme = _options.includeBaseTheme;
  var componentTheme = typeof componentThemeIn === 'function' ? componentThemeIn(baseTheme) : componentThemeIn;
  var filteredComponentTheme = filterKeys(componentTheme, excludeKeys);
  var filteredBaseTheme = filterKeys(baseTheme, excludeKeys);
  var filteredBaseThemeKeys = Object.keys(filteredBaseTheme);
  return includeBaseTheme ? filteredComponentTheme : filterKeys(filteredComponentTheme, filteredBaseThemeKeys);
}