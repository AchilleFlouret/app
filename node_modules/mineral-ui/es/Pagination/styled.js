import _styled from "@emotion/styled-base";

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import withProps from 'recompose/withProps';
import { componentStyleReset } from "../styles";
import { themed } from "../themes";
import Flex, { FlexItem } from "../Flex";
import TextInput from "../TextInput";
import Button from "../Button";
import { paginationTheme } from "./themes";
export var PaginationRoot = withProps({
  as: 'nav',
  justifyContent: 'end'
})(
/*#__PURE__*/
_styled(Flex, {
  target: "e82prp50"
})(function (_ref) {
  var baseTheme = _ref.theme;
  var theme = paginationTheme(baseTheme);
  return _objectSpread({}, componentStyleReset(baseTheme), {
    flexWrap: 'wrap-reverse',
    marginBottom: "-" + theme.Pagination_gutterWidth,
    '& > *': {
      marginBottom: theme.Pagination_gutterWidth
    }
  });
}));
export var PagesRoot =
/*#__PURE__*/
_styled(FlexItem, {
  target: "e82prp51"
})(function (_ref2) {
  var _notLastChild;

  var baseTheme = _ref2.theme;
  var theme = paginationTheme(baseTheme);
  var rtl = theme.direction === 'rtl';
  var middleMargin = rtl ? 'marginLeft' : 'marginRight';
  return {
    '& > button, & > span': {
      '&:not(:last-child)': (_notLastChild = {}, _notLastChild[middleMargin] = theme.Pagination_gutterWidth, _notLastChild)
    }
  };
});
var ThemedButton = themed(Button)(function (_ref3) {
  var theme = _ref3.theme;
  return {
    color_disabled: theme.color_theme
  };
});
export var PagesEllipsisButton = withProps({
  'aria-disabled': true,
  as: 'span',
  minimal: true,
  size: 'medium'
})(
/*#__PURE__*/
_styled(ThemedButton, {
  target: "e82prp52"
})({
  name: "1ixbp0l",
  styles: "pointer-events:none;"
}));
export var PageJumperNumberInput =
/*#__PURE__*/
_styled(TextInput, {
  target: "e82prp53"
})({
  name: "u2av8b",
  styles: "& > input{-moz-appearance:textfield;&::-webkit-inner-spin-button, &::-webkit-outer-spin-button{-webkit-appearance:none;margin:0;}}"
});
export var PageJumperRoot =
/*#__PURE__*/
_styled(FlexItem, {
  target: "e82prp54"
})(function (_ref4) {
  var width = _ref4.width;
  return {
    width: width
  };
});