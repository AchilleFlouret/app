import { jsx as ___EmotionJSX } from "@emotion/core";

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import Truncate from "../Truncate";
import { TabAnchor as Anchor } from "./styled";
import { tabPropTypes } from "./propTypes";

var Tab =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(Tab, _Component);

  function Tab() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Tab.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        disabled = _this$props.disabled,
        icon = _this$props.icon,
        index = _this$props.index,
        panelId = _this$props.panelId,
        selected = _this$props.selected,
        restProps = _objectWithoutPropertiesLoose(_this$props, ["children", "disabled", "icon", "index", "panelId", "selected"]);

    var anchorProps = _objectSpread({
      'aria-controls': panelId,
      'aria-disabled': disabled,
      'aria-selected': selected,
      'data-index': index,
      disabled: disabled,
      href: panelId && "#" + panelId,
      iconStart: icon,
      minimal: true,
      selected: selected,
      tabIndex: selected ? 0 : -1
    }, restProps);

    return ___EmotionJSX("li", {
      role: "presentation"
    }, ___EmotionJSX(Anchor, anchorProps, ___EmotionJSX(Truncate, null, children)));
  };

  return Tab;
}(Component);

_defineProperty(Tab, "displayName", 'Tab');

export { Tab as default };
Tab.propTypes = process.env.NODE_ENV !== "production" ? tabPropTypes : {};