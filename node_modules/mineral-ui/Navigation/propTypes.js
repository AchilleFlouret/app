"use strict";

exports.__esModule = true;
exports.secondaryNavPropTypes = exports.primaryNavPropTypes = exports.navItemPropTypes = void 0;

var _propTypes = require("prop-types");

var _constants = require("./constants");

var _propTypes2 = require("../Menu/propTypes");

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var alignPropType = (0, _propTypes.oneOf)(Object.keys(_constants.ALIGN));
var itemElementPropType = (0, _propTypes.oneOfType)([_propTypes.element, _propTypes.string]);
var maxWidthPropType = (0, _propTypes.oneOfType)([_propTypes.number, _propTypes.string]);
var navigationItemPropType = (0, _propTypes.shape)(_objectSpread({}, _propTypes2.menuItemPropType, {
  icon: _propTypes.element,
  maxWidth: (0, _propTypes.oneOfType)([_propTypes.number, _propTypes.string])
}));
var navigationItemsPropType = (0, _propTypes.arrayOf)(navigationItemPropType);
var messagesPropType = (0, _propTypes.shape)({
  moreLabel: _propTypes.string.isRequired,
  moreText: _propTypes.string.isRequired
});
var navItemPropTypes = {
  children: _propTypes.node,
  disabled: _propTypes.bool,
  icon: _propTypes.element,
  maxWidth: maxWidthPropType,
  selected: _propTypes.bool
};
exports.navItemPropTypes = navItemPropTypes;
var baseNavPropTypes = {
  align: alignPropType,
  children: _propTypes.node,
  itemAs: itemElementPropType,
  items: navigationItemsPropType,
  maxItemWidth: maxWidthPropType,
  messages: messagesPropType,
  onChange: _propTypes.func,
  overflowAtIndex: _propTypes.number,
  selectedIndex: _propTypes.number
};

var primaryNavPropTypes = _objectSpread({}, baseNavPropTypes, {
  minimal: _propTypes.bool
});

exports.primaryNavPropTypes = primaryNavPropTypes;

var secondaryNavPropTypes = _objectSpread({}, baseNavPropTypes, {
  type: (0, _propTypes.oneOf)(Object.keys(_constants.TYPE))
});

exports.secondaryNavPropTypes = secondaryNavPropTypes;