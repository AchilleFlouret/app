"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

var _Form = require("../Form");

var _styled = require("./styled");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var PageJumper =
/*#__PURE__*/
function (_PureComponent) {
  _inheritsLoose(PageJumper, _PureComponent);

  function PageJumper() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "handlePageJump", function (event) {
      var key = event.key,
          input = event.currentTarget,
          type = event.type;

      if (type === 'blur' || type === 'keydown' && key === 'Enter') {
        var _this$props = _this.props,
            currentPage = _this$props.currentPage,
            onPageChange = _this$props.onPageChange,
            totalPages = _this$props.totalPages;
        var page = parseInt(input.value);

        if (page >= 1 && page <= totalPages && page !== currentPage) {
          onPageChange(page);
        }
      }
    });

    return _this;
  }

  var _proto = PageJumper.prototype;

  _proto.render = function render() {
    var _this$props2 = this.props,
        inputRef = _this$props2.inputRef,
        messages = _this$props2.messages,
        ignoreOnPageChange = _this$props2.onPageChange,
        size = _this$props2.size,
        rootProps = _objectWithoutPropertiesLoose(_this$props2, ["inputRef", "messages", "onPageChange", "size"]);

    var label = messages.label,
        placeholder = messages.placeholder;
    var inputProps = {
      label: label,
      hideLabel: true,
      input: _styled.PageJumperNumberInput,
      caption: label,
      inputRef: inputRef,
      onBlur: this.handlePageJump,
      onKeyDown: this.handlePageJump,
      pattern: '[0-9]*',
      placeholder: placeholder,
      size: size,
      type: 'number'
    };
    return (0, _core.jsx)(_styled.PageJumperRoot, rootProps, (0, _core.jsx)(_Form.FormField, inputProps));
  };

  return PageJumper;
}(_react.PureComponent);

exports.default = PageJumper;

_defineProperty(PageJumper, "displayName", 'PageJumper');