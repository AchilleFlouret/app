"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

var _withForwardRef = _interopRequireDefault(require("../utils/withForwardRef"));

var _styled = require("./styled");

var _constants = require("./constants");

var _propTypes = require("./propTypes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Button =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(Button, _Component);

  function Button() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = Button.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        disabled = _this$props.disabled,
        forwardedRef = _this$props.forwardedRef,
        iconStart = _this$props.iconStart,
        iconEnd = _this$props.iconEnd,
        _this$props$size = _this$props.size,
        size = _this$props$size === void 0 ? Button.defaultProps.size : _this$props$size,
        variant = _this$props.variant,
        restProps = _objectWithoutPropertiesLoose(_this$props, ["children", "disabled", "forwardedRef", "iconStart", "iconEnd", "size", "variant"]); // [1] Necessary when rendering an `a` element, which doesn't use `disabled`


    var rootProps = _objectSpread({
      'aria-disabled': disabled,
      // [1]
      disabled: disabled,
      ref: forwardedRef,
      size: size,
      tabIndex: disabled ? -1 : undefined,
      // [1]
      text: children,
      variant: variant
    }, restProps);

    var startIcon = iconStart ? (0, _react.cloneElement)(iconStart, {
      size: _constants.ICON_SIZE[size],
      key: 'iconStart'
    }) : null;
    var endIcon = iconEnd ? (0, _react.cloneElement)(iconEnd, {
      size: _constants.ICON_SIZE[size],
      key: 'iconEnd'
    }) : null;
    return (0, _core.jsx)(_styled.Button, rootProps, (0, _core.jsx)(_styled.Inner, null, startIcon, children && (0, _core.jsx)(_styled.Content, {
      size: size
    }, children), endIcon));
  };

  return Button;
}(_react.Component);

_defineProperty(Button, "displayName", 'Button');

_defineProperty(Button, "defaultProps", {
  size: _constants.SIZE.large
});

Button.propTypes = process.env.NODE_ENV !== "production" ? _propTypes.buttonPropTypes : {};

var _default = (0, _withForwardRef.default)(Button);

exports.default = _default;