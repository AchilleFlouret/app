"use strict";

exports.__esModule = true;
exports.MenuItemText = exports.MenuItemSecondaryText = exports.MenuItemInner = exports.MenuItemContent = exports.MenuItemRoot = exports.MenuGroupTitle = exports.MenuDividerRoot = exports.MenuRoot = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _isPropValid = _interopRequireDefault(require("@emotion/is-prop-valid"));

var _styles = require("../styles");

var _emotion = require("../utils/emotion");

var _themes = require("./themes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var MenuRoot = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "ektd6bc0"
})(function (_ref) {
  var theme = _ref.theme;
  return (0, _styles.componentStyleReset)(theme);
});
exports.MenuRoot = MenuRoot;
var MenuDividerRoot = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "ektd6bc1"
})(function (props) {
  var theme = (0, _themes.menuDividerTheme)(props.theme);
  return {
    backgroundColor: theme.MenuDivider_borderColor,
    height: theme.MenuDivider_borderWidth,
    margin: theme.MenuDivider_margin + " 0"
  };
});
exports.MenuDividerRoot = MenuDividerRoot;
var MenuGroupTitle = (
/*#__PURE__*/
0, _styledBase.default)('h3', {
  target: "ektd6bc2"
})(function (props) {
  var _ref2;

  var theme = _objectSpread({}, (0, _themes.menuGroupTheme)(props.theme), (0, _themes.menuItemTheme)(props.theme));

  var paddingBottom = (0, _styles.getNormalizedValue)(theme.MenuGroupTitle_paddingBottom, theme.MenuGroupTitle_fontSize);
  var paddingTop = (0, _styles.getNormalizedValue)(theme.MenuGroupTitle_paddingTop, theme.MenuGroupTitle_fontSize); // We need to use MenuItem's padding, to match

  var paddingHorizontal = (0, _styles.getNormalizedValue)(theme.MenuItem_paddingHorizontal, theme.MenuGroupTitle_fontSize);
  var marginTop = (0, _styles.getNormalizedValue)(theme.MenuGroupTitle_marginTop, theme.MenuGroupTitle_fontSize);
  return _ref2 = {
    fontSize: theme.MenuGroupTitle_fontSize,
    fontWeight: theme.MenuGroupTitle_fontWeight,
    margin: 0,
    padding: paddingTop + " " + paddingHorizontal + " " + paddingBottom
  }, _ref2['&:not(:first-child)' + _emotion.ignoreSsrWarning] = {
    marginTop: marginTop
  }, _ref2;
});
exports.MenuGroupTitle = MenuGroupTitle;
var MenuItemRoot = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  shouldForwardProp: function shouldForwardProp(prop) {
    return prop !== 'disabled' && (0, _isPropValid.default)(prop);
  },
  target: "ektd6bc3"
})( // These styles are based off of Button, with significant changes
function (_ref3) {
  var _ref4;

  var disabled = _ref3.disabled,
      isHighlighted = _ref3.isHighlighted,
      baseTheme = _ref3.theme,
      variant = _ref3.variant;
  var theme = (0, _themes.menuItemTheme)(baseTheme);

  if (variant) {
    // prettier-ignore
    theme = _objectSpread({}, theme, {
      MenuItem_backgroundColor_active: theme["backgroundColor_" + variant + "_active"],
      MenuItem_backgroundColor_focus: theme["backgroundColor_" + variant + "_focus"],
      MenuItem_backgroundColor_hover: theme["backgroundColor_" + variant + "_hover"],
      MenuItem_color: theme["color_" + variant],
      MenuItemIcon_color: theme["icon_color_" + variant]
    });
  }

  return _ref4 = {
    backgroundColor: isHighlighted && theme.MenuItem_backgroundColor_hover,
    color: disabled ? theme.color_disabled : theme.MenuItem_color,
    cursor: disabled ? 'default' : 'pointer',
    display: 'block',
    fontWeight: theme.MenuItem_fontWeight,
    padding: theme.MenuItem_paddingVertical + " " + theme.MenuItem_paddingHorizontal,
    textDecoration: 'none',
    '&:focus': {
      backgroundColor: !disabled && theme.MenuItem_backgroundColor_focus,
      outline: 0
    },
    '&:hover': {
      backgroundColor: !disabled && theme.MenuItem_backgroundColor_hover
    },
    '&:active': {
      backgroundColor: !disabled && theme.MenuItem_backgroundColor_active
    },
    '&[aria-selected="true"]': {
      backgroundColor: isHighlighted ? theme.MenuItem_backgroundColor_selectedHover : theme.MenuItem_backgroundColor_selected,
      fontWeight: theme.MenuItem_fontWeight_selected,
      '&:active': {
        backgroundColor: !disabled && theme.MenuItem_backgroundColor_selectedActive
      }
    },
    '& [role="img"]': {
      boxSizing: 'content-box',
      color: disabled ? null : theme.MenuItemIcon_color,
      display: 'block',
      flex: '0 0 auto'
    }
  }, _ref4['& [role="img"]:first-child' + _emotion.ignoreSsrWarning] = {
    marginLeft: theme.direction === 'rtl' ? theme.MenuItemIcon_margin : null,
    marginRight: theme.direction === 'ltr' ? theme.MenuItemIcon_margin : null
  }, _ref4['& [role="img"]:last-child'] = {
    marginLeft: theme.direction === 'ltr' ? theme.MenuItemIcon_margin : null,
    marginRight: theme.direction === 'rtl' ? theme.MenuItemIcon_margin : null
  }, _ref4;
});
exports.MenuItemRoot = MenuItemRoot;
var MenuItemContent = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  target: "ektd6bc4"
})({
  display: 'flex',
  flex: '1 1 auto',
  flexWrap: 'wrap',
  justifyContent: 'space-between',
  padding: (0, _styles.pxToEm)(3) + " 0 " + (0, _styles.pxToEm)(4),
  whiteSpace: 'normal',
  wordBreak: 'break-all'
});
exports.MenuItemContent = MenuItemContent;
var MenuItemInner = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  target: "ektd6bc5"
})({
  name: "gg4vpm",
  styles: "display:flex;justify-content:space-between;"
});
exports.MenuItemInner = MenuItemInner;
var MenuItemSecondaryText = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  target: "ektd6bc6"
})(function (props) {
  var theme = (0, _themes.menuItemTheme)(props.theme);
  var fontSize = theme.MenuItemSecondaryText_fontSize;
  return {
    color: theme.MenuItemSecondaryText_color,
    fontSize: fontSize,
    // The regular text fontSize is larger than that of the secondary text.
    // This magic number (optically) re-aligns both sets of text vertically.
    paddingTop: (0, _styles.getNormalizedValue)((0, _styles.pxToEm)(2), fontSize),
    wordBreak: 'break-word'
  };
});
exports.MenuItemSecondaryText = MenuItemSecondaryText;
var MenuItemText = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  target: "ektd6bc7"
})(function (props) {
  var theme = (0, _themes.menuItemTheme)(props.theme);
  var fontSize = theme.MenuItemContent_fontSize;
  var margin = (0, _styles.getNormalizedValue)(theme.space_inline_sm, fontSize);
  return {
    fontSize: fontSize,
    marginLeft: theme.direction === 'rtl' && margin,
    marginRight: theme.direction === 'ltr' && margin,
    wordBreak: 'break-word'
  };
});
exports.MenuItemText = MenuItemText;