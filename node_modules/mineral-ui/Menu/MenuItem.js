"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

var _styles = require("../styles");

var _IconDanger = _interopRequireDefault(require("../Icon/IconDanger"));

var _IconSuccess = _interopRequireDefault(require("../Icon/IconSuccess"));

var _IconWarning = _interopRequireDefault(require("../Icon/IconWarning"));

var _styled = require("./styled");

var _propTypes = require("./propTypes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var variantIcons = {
  danger: (0, _core.jsx)(_IconDanger.default, {
    size: (0, _styles.pxToEm)(24)
  }),
  success: (0, _core.jsx)(_IconSuccess.default, {
    size: (0, _styles.pxToEm)(24)
  }),
  warning: (0, _core.jsx)(_IconWarning.default, {
    size: (0, _styles.pxToEm)(24)
  })
};

var MenuItem =
/*#__PURE__*/
function (_PureComponent) {
  _inheritsLoose(MenuItem, _PureComponent);

  function MenuItem() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "getItemProps", function (props) {
      if (props === void 0) {
        props = {};
      }

      var _props = props,
          disabled = _props.disabled,
          onClick = _props.onClick,
          render = _props.render,
          tabIndex = _props.tabIndex,
          restProps = _objectWithoutPropertiesLoose(_props, ["disabled", "onClick", "render", "tabIndex"]);

      return _objectSpread({}, render ? restProps : {}, {
        'aria-disabled': disabled,
        disabled: disabled,
        tabIndex: tabIndex !== undefined ? tabIndex : disabled ? '-1' : 0
      }, !render ? restProps : {}, !disabled ? {
        onClick: onClick,
        onKeyDown: _this.onKeyDown
      } : {});
    });

    _defineProperty(_assertThisInitialized(_this), "onKeyDown", function (event) {
      var onClick = _this.props.onClick;

      if (event.key === 'Enter' || event.key === ' ') {
        event.preventDefault();
        onClick && onClick(event);
      }
    });

    return _this;
  }

  var _proto = MenuItem.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        iconEnd = _this$props.iconEnd,
        iconStart = _this$props.iconStart,
        render = _this$props.render,
        secondaryText = _this$props.secondaryText,
        variant = _this$props.variant;

    if (render) {
      return render({
        props: this.getItemProps(this.props)
      });
    }

    var rootProps = this.getItemProps(this.props);
    var startIcon = variant !== undefined && variant && variantIcons[variant];

    if (iconStart) {
      startIcon = (0, _react.cloneElement)(iconStart, {
        size: (0, _styles.pxToEm)(24),
        key: 'iconStart'
      });
    }

    var endIcon = iconEnd && (0, _react.cloneElement)(iconEnd, {
      size: (0, _styles.pxToEm)(24),
      key: 'iconEnd'
    });
    return (0, _core.jsx)(_styled.MenuItemRoot, rootProps, (0, _core.jsx)(_styled.MenuItemInner, null, startIcon, (children || secondaryText) && (0, _core.jsx)(_styled.MenuItemContent, null, (0, _core.jsx)(_styled.MenuItemText, null, children), secondaryText && (0, _core.jsx)(_styled.MenuItemSecondaryText, null, secondaryText)), endIcon));
  };

  return MenuItem;
}(_react.PureComponent);

exports.default = MenuItem;

_defineProperty(MenuItem, "displayName", 'MenuItem');

MenuItem.propTypes = process.env.NODE_ENV !== "production" ? _propTypes.menuItemPropTypes : {};