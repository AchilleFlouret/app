"use strict";

exports.__esModule = true;
exports.Input = exports.TextInputRoot = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _styles = require("../styles");

var _themes = require("../themes");

var _FauxControl = _interopRequireDefault(require("../FauxControl"));

var _constants = require("./constants");

var _themes2 = require("./themes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ThemedFauxControl = (0, _themes.themed)(_FauxControl.default)(function (_ref) {
  var baseTheme = _ref.theme;
  return (0, _themes.mapComponentThemes)({
    name: 'TextInput',
    theme: (0, _themes2.textInputTheme)(baseTheme)
  }, {
    name: 'FauxControl',
    theme: {}
  }, baseTheme);
});
var TextInputRoot = (
/*#__PURE__*/
0, _styledBase.default)(ThemedFauxControl, {
  target: "e1gbx4v70"
})(function (_ref2) {
  var baseTheme = _ref2.theme,
      variant = _ref2.variant;
  var theme = (0, _themes2.textInputTheme)(baseTheme);

  if (variant) {
    theme = _objectSpread({}, theme, {
      TextInputIcon_color: theme["icon_color_" + variant]
    });
  }

  return {
    alignItems: 'center',
    cursor: 'text',
    display: 'flex',
    width: '100%',
    '& [role="img"]': {
      color: theme.TextInputIcon_color,
      display: 'block',
      flex: '0 0 auto',
      margin: "0 " + theme.TextInputIcon_marginHorizontal,
      '&:last-of-type': {
        color: theme.TextInputIcon_color
      }
    }
  };
});
exports.TextInputRoot = TextInputRoot;
var Input = (
/*#__PURE__*/
0, _styledBase.default)('input', {
  target: "e1gbx4v71"
})(function (_ref3) {
  var controlSize = _ref3.controlSize,
      nonHtmlSize = _ref3.size,
      baseTheme = _ref3.theme;
  var theme = (0, _themes2.textInputTheme)(baseTheme);
  var size = controlSize || nonHtmlSize;
  var fontSize = size === _constants.SIZE.small ? theme.TextInput_fontSize_small : theme.TextInput_fontSize;
  return {
    backgroundColor: 'transparent',
    border: 0,
    boxShadow: 'none',
    flex: '1 1 auto',
    fontFamily: 'inherit',
    height: (0, _styles.getNormalizedValue)(theme["TextInput_height_" + size], fontSize),
    minWidth: 0,
    width: '100%',
    // Normalize Safari search inputs
    '&[type="search"]': {
      WebkitAppearance: 'none',
      '&::-webkit-search-decoration': {
        WebkitAppearance: 'none'
      }
    }
  };
});
exports.Input = Input;