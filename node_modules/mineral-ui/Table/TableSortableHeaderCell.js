"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../utils");

var _IconArrowDropdownDown = _interopRequireDefault(require("../Icon/IconArrowDropdownDown"));

var _IconArrowDropdownUp = _interopRequireDefault(require("../Icon/IconArrowDropdownUp"));

var _TableContext = _interopRequireDefault(require("./TableContext"));

var _styled = require("./styled");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var iconProps = {
  'aria-hidden': true,
  size: 'auto'
};
var sortIcon = {
  ascending: (0, _core.jsx)(_IconArrowDropdownUp.default, iconProps),
  descending: (0, _core.jsx)(_IconArrowDropdownDown.default, iconProps)
};

var TableSortableHeaderCell =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(TableSortableHeaderCell, _Component);

  function TableSortableHeaderCell() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = TableSortableHeaderCell.prototype;

  _proto.render = function render() {
    var _this = this;

    return (0, _core.jsx)(_TableContext.default.Consumer, null, function (tableContextProps) {
      var _this$props = _this.props,
          children = _this$props.children,
          label = _this$props.label,
          name = _this$props.name,
          messages = _this$props.messages,
          render = _this$props.render,
          sortable = _this$props.sortable,
          restProps = _objectWithoutPropertiesLoose(_this$props, ["children", "label", "name", "messages", "render", "sortable"]);

      var sort = sortable.sort,
          sortFn = sortable.sortFn;
      var sortColumn = sort && sort.key;
      var descending = sort ? sort.descending : false;
      var direction = descending ? _constants.SORT.descending : _constants.SORT.ascending;
      var isSorted = sortColumn === name;
      var nextDirection = isSorted && direction === _constants.SORT.ascending ? _constants.SORT.descending : _constants.SORT.ascending;
      var toggle = isSorted || direction !== nextDirection;
      var nextDescending = toggle ? !descending : descending;
      var nextSort = {
        key: name,
        descending: nextDescending
      };

      var handleSort = function handleSort() {
        return sortFn(nextSort);
      };

      var rootProps = _objectSpread({
        'aria-label': label || children,
        'aria-sort': isSorted ? direction : 'none',
        role: 'columnheader'
      }, restProps);

      var buttonProps = _objectSpread({
        'aria-label': nextDirection === _constants.SORT.ascending ? messages.sortColumnAscending : messages.sortColumnDescending,
        onClick: handleSort
      }, restProps);

      var iconHolderProps = {
        direction: isSorted && direction || _constants.SORT.ascending,
        isSorted: isSorted
      };

      if ((0, _utils.isRenderProp)(render)) {
        var renderProps = {
          props: _objectSpread({}, tableContextProps, rootProps, {
            children: children,
            label: label,
            name: name,
            messages: messages,
            sortable: sortable
          }),
          state: {
            direction: direction,
            isSorted: isSorted
          },
          helpers: {
            handleSort: handleSort
          }
        };
        return render(renderProps);
      }

      return (0, _core.jsx)(_styled.TableSortableHeaderCellRoot, rootProps, (0, _core.jsx)(_styled.TableSortableHeaderCellButton, buttonProps, (0, _core.jsx)(_styled.TableSortableHeaderCellContent, null, children), "\xA0", (0, _core.jsx)(_styled.TableSortableHeaderCellIconHolder, iconHolderProps, sortIcon[iconHolderProps.direction])));
    });
  };

  return TableSortableHeaderCell;
}(_react.Component);

exports.default = TableSortableHeaderCell;

_defineProperty(TableSortableHeaderCell, "displayName", 'TableSortableHeaderCell');