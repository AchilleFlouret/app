"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireDefault(require("react"));

var _reactPopper = require("react-popper");

var _emotionTheming = require("emotion-theming");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var getRtlPlacement = function getRtlPlacement(placement) {
  var rtlPlacementMap = {
    end: 'start',
    start: 'end'
  };

  var _placement$split = placement.split('-'),
      edge = _placement$split[0],
      direction = _placement$split[1];

  if (['bottom', 'top'].indexOf(edge) !== -1) {
    return placement.replace(direction, rtlPlacementMap[direction]);
  }

  return placement;
}; // eslint-disable-next-line react/display-name


function RtlPopper(_ref) {
  var placement = _ref.placement,
      theme = _ref.theme,
      restProps = _objectWithoutPropertiesLoose(_ref, ["placement", "theme"]);

  var rootProps = _objectSpread({
    placement: placement && theme.direction === 'rtl' ? getRtlPlacement(placement) : placement
  }, restProps);

  return (0, _core.jsx)(_reactPopper.Popper, rootProps);
}

var _default = (0, _emotionTheming.withTheme)(RtlPopper);

exports.default = _default;