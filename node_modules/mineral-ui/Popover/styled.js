"use strict";

exports.__esModule = true;
exports.PopoverTriggerWrapper = exports.PopoverArrowRoot = exports.PopoverTitle = exports.PopoverBlock = exports.PopoverContentWrapper = exports.PopoverRoot = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _isPropValid = _interopRequireDefault(require("@emotion/is-prop-valid"));

var _styles = require("../styles");

var _themes = require("../themes");

var _CardBlock = _interopRequireDefault(require("../Card/CardBlock"));

var _CardTitle = _interopRequireDefault(require("../Card/CardTitle"));

var _themes2 = require("./themes");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var PopoverRoot = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  target: "ew65k9p0"
})({
  color: null,
  display: 'inline-block'
});
exports.PopoverRoot = PopoverRoot;
var PopoverContentWrapper = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "ew65k9p1"
})(function (_ref) {
  var baseTheme = _ref.theme;
  var theme = (0, _themes2.popoverContentTheme)(baseTheme);
  return _objectSpread({}, (0, _styles.componentStyleReset)(baseTheme), {
    backgroundColor: theme.PopoverContent_backgroundColor,
    border: "1px solid " + theme.PopoverContent_borderColor,
    borderRadius: theme.PopoverContent_borderRadius,
    boxShadow: theme.PopoverContent_boxShadow,
    color: theme.PopoverContent_color,
    padding: theme.PopoverContent_paddingVertical + " 0",
    maxWidth: theme.PopoverContent_maxWidth,
    zIndex: theme.PopoverContent_zIndex,
    '&[data-placement^="top"]': {
      marginBottom: _constants.ARROW_SIZE
    },
    '&[data-placement^="bottom"]': {
      marginTop: _constants.ARROW_SIZE
    },
    '&[data-placement^="left"]': {
      marginRight: _constants.ARROW_SIZE
    },
    '&[data-placement^="right"]': {
      marginLeft: _constants.ARROW_SIZE
    },
    '&[data-out-of-boundaries]': {
      visibility: 'hidden'
    }
  });
});
exports.PopoverContentWrapper = PopoverContentWrapper;

var cardOverrides = function cardOverrides(_ref2) {
  var baseTheme = _ref2.theme;
  var theme = (0, _themes2.popoverContentTheme)(baseTheme);
  return {
    CardRow_marginVertical: theme.PopoverContentBlock_marginVertical,
    CardRow_marginVerticalLast: theme.PopoverContentBlock_marginVertical,
    CardRow_paddingHorizontal: theme.PopoverContentBlock_paddingHorizontal
  };
};

var PopoverBlock = (0, _themes.themed)(_CardBlock.default)(cardOverrides);
exports.PopoverBlock = PopoverBlock;
var PopoverTitle = (0, _themes.themed)(_CardTitle.default)(cardOverrides);
exports.PopoverTitle = PopoverTitle;
var PopoverArrowRoot = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  shouldForwardProp: function shouldForwardProp(prop) {
    return prop !== 'size' && (0, _isPropValid.default)(prop);
  },
  target: "ew65k9p2"
})(function (_ref3) {
  var placement = _ref3.placement,
      size = _ref3.size,
      baseTheme = _ref3.theme;
  var theme = (0, _themes2.popoverArrowTheme)(baseTheme);
  var arrowShadow = ', 0 3px 1px rgba(0, 0, 0, 0.3)';
  var horizontalOffset = "-" + (parseFloat(size) - 4) + "px";
  var directionalStyles;
  var rotation = 0;

  switch (true) {
    case placement && placement.startsWith('top'):
      // Magic numbers to optically match theme.boxShadow_2
      arrowShadow = ', 0 4px 2px rgba(0, 0, 0, 0.3)';
      directionalStyles = {
        bottom: "-" + (parseFloat(size) - 2) + "px",
        left: "calc(50% - " + size + ")",
        marginBottom: 0,
        marginTop: 0
      };
      break;

    case placement && placement.startsWith('bottom'):
      arrowShadow = '';
      directionalStyles = {
        top: "-" + (parseFloat(size) - 3) + "px",
        left: "calc(50% - " + size + ")",
        marginBottom: 0,
        marginTop: 0
      };
      rotation = 180;
      break;

    case placement && placement.startsWith('left'):
      directionalStyles = {
        right: horizontalOffset,
        top: "calc(50% - " + size + ")",
        marginLeft: 0,
        marginRight: 0
      };
      rotation = -90;
      break;

    case placement && placement.startsWith('right'):
      directionalStyles = {
        left: horizontalOffset,
        top: "calc(50% - " + size + ")",
        marginLeft: 0,
        marginRight: 0
      };
      rotation = 90;
      break;

    default:
      directionalStyles = {
        display: 'none'
      };
  }

  return _objectSpread({
    color: theme.PopoverArrow_backgroundColor,
    display: 'inline-block',
    fontSize: size,
    margin: size,
    position: 'absolute',
    textShadow: "0 2px 0 " + theme.PopoverArrow_borderColor + arrowShadow,
    transform: "rotate(" + rotation + "deg) scaleX(2)"
  }, directionalStyles);
});
exports.PopoverArrowRoot = PopoverArrowRoot;
var PopoverTriggerWrapper = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  shouldForwardProp: function shouldForwardProp(prop) {
    return prop !== 'cursor' && (0, _isPropValid.default)(prop);
  },
  target: "ew65k9p3"
})(function (_ref4) {
  var cursor = _ref4.cursor;
  return {
    cursor: cursor,
    display: 'inline-block'
  };
});
exports.PopoverTriggerWrapper = PopoverTriggerWrapper;