"use strict";

exports.__esModule = true;
exports.default = CardActions;

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

var _Button = _interopRequireDefault(require("../Button"));

var _constants = require("../Button/constants");

var _styled = require("./styled");

var _propTypes = require("./propTypes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function CardActions(props) {
  var children = props.children,
      restProps = _objectWithoutPropertiesLoose(props, ["children"]);

  var actions = _react.Children.map(children, function (child, index) {
    if (child.type === _Button.default) {
      child = (0, _react.cloneElement)(child, {
        size: _constants.SIZE.medium
      });
    }

    return (0, _core.jsx)(_styled.CardAction, {
      key: index
    }, child);
  });

  return (0, _core.jsx)(_styled.CardActionsRoot, restProps, actions);
}

CardActions.displayName = 'CardActions';
CardActions.propTypes = process.env.NODE_ENV !== "production" ? _propTypes.cardActionsPropTypes : {};