"use strict";

exports.__esModule = true;
exports.CardTitleMenuButton = exports.CardTitleTitleContent = exports.CardTitleTitle = exports.CardTitleSubtitle = exports.CardTitleSecondaryText = exports.CardTitleInner = exports.CardTitleAvatar = exports.CardTitleRoot = exports.CardStatusRoot = exports.CardImageRoot = exports.CardFooterToggleButton = exports.CardFooterTitleContent = exports.CardFooterTitle = exports.CardFooterContent = exports.CardFooterRoot = exports.CardDividerRoot = exports.CardBlockInner = exports.CardBlockRoot = exports.CardAction = exports.CardActionsRoot = exports.CardRow = exports.CardRoot = void 0;

var _core = require("@emotion/core");

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _react = _interopRequireDefault(require("react"));

var _withProps = _interopRequireDefault(require("recompose/withProps"));

var _styles = require("../styles");

var _emotion = require("../utils/emotion");

var _themes = require("../themes");

var _Button = _interopRequireDefault(require("../Button"));

var _themes2 = require("./themes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CardRoot = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "e1roqw6v0"
})(function (props) {
  var theme = (0, _themes2.cardTheme)(props.theme);
  return _objectSpread({}, (0, _styles.componentStyleReset)(props.theme), {
    backgroundColor: theme.Card_backgroundColor,
    border: "1px solid " + theme.Card_borderColor,
    borderRadius: theme.Card_borderRadius,
    boxShadow: theme.Card_boxShadow,
    cursor: props.onClick && 'pointer',
    paddingBottom: '0.01em',
    // Necessary to prevent margin collapse of last-child
    paddingTop: '0.01em',
    // Necessary to prevent margin collapse of first-child
    '&:focus': {
      boxShadow: theme.Card_boxShadow_focus
    }
  });
});
exports.CardRoot = CardRoot;
var CardRow = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "e1roqw6v1"
})(function (props) {
  var theme = (0, _themes2.cardTheme)(props.theme);
  return {
    marginBottom: theme.CardRow_marginVertical,
    marginTop: theme.CardRow_marginVertical,
    paddingLeft: theme.CardRow_paddingHorizontal,
    paddingRight: theme.CardRow_paddingHorizontal
  };
}, "");
exports.CardRow = CardRow;
var CardActionsRoot = (
/*#__PURE__*/
0, _styledBase.default)(CardRow, {
  target: "e1roqw6v2"
})(function (props) {
  var theme = _objectSpread({}, (0, _themes2.cardActionsTheme)(props.theme), (0, _themes2.cardTheme)(props.theme));

  return {
    display: 'flex',
    flexWrap: 'wrap',
    justifyContent: 'flex-end',
    // We subtract `theme.CardActionsAction_spaceInline` because of the marginBottom on Action.
    marginBottom: parseFloat(theme.CardRow_marginVertical) - parseFloat(theme.CardActionsAction_spaceInline) + "em"
  };
});
exports.CardActionsRoot = CardActionsRoot;
var CardAction = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  target: "e1roqw6v3"
})(function (props) {
  var theme = _objectSpread({}, (0, _themes2.cardActionsTheme)(props.theme), (0, _themes2.cardBlockTheme)(props.theme));

  var rtl = theme.direction === 'rtl';
  var fontSize = theme.CardBlock_fontSize;
  var actionsGap = (0, _styles.getNormalizedValue)(theme.CardActionsAction_spaceInline, fontSize);
  return {
    alignItems: 'center',
    display: 'flex',
    flex: '0 0 auto',
    fontSize: fontSize,
    marginBottom: actionsGap,
    marginLeft: rtl ? null : actionsGap,
    marginRight: rtl ? actionsGap : null
  };
});
exports.CardAction = CardAction;
var CardBlockRoot = (
/*#__PURE__*/
0, _styledBase.default)(CardRow, {
  target: "e1roqw6v4"
})(function (props) {
  var theme = (0, _themes2.cardTheme)(props.theme);
  return {
    '&:last-child': {
      marginBottom: theme.CardRow_marginVerticalLast
    }
  };
});
exports.CardBlockRoot = CardBlockRoot;
var CardBlockInner = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "e1roqw6v5"
})(function (props) {
  var theme = (0, _themes2.cardBlockTheme)(props.theme);
  return {
    fontSize: theme.CardBlock_fontSize,
    lineHeight: theme.CardBlock_lineHeight
  };
});
exports.CardBlockInner = CardBlockInner;
var CardDividerRoot = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "e1roqw6v6"
})(function (props) {
  var theme = _objectSpread({}, (0, _themes2.cardDividerTheme)(props.theme), (0, _themes2.cardTheme)(props.theme));

  return {
    backgroundColor: theme.CardDivider_borderColor,
    height: theme.CardDivider_borderWidth,
    margin: theme.CardRow_marginVertical + " 0"
  };
});
exports.CardDividerRoot = CardDividerRoot;
var CardFooterRoot = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "e1roqw6v7"
})(function (_ref) {
  var variant = _ref.variant,
      baseTheme = _ref.theme;

  var theme = _objectSpread({}, (0, _themes2.cardFooterTheme)(baseTheme), (0, _themes2.cardTheme)(baseTheme));

  if (variant) {
    theme = _objectSpread({}, theme, {
      CardFooter_backgroundColor: theme["well_backgroundColor_" + variant],
      CardFooter_borderColor: theme["well_borderColor_" + variant]
    });
  } // [1] Making the footer overlap the Card border. The `calc` bit accounts
  //     for the paddingBottom on Card to prevent margin collapse.


  return {
    backgroundColor: theme.CardFooter_backgroundColor,
    border: "1px solid " + theme.CardFooter_borderColor,
    borderRadius: "0 0 " + theme.Card_borderRadius + " " + theme.Card_borderRadius,
    margin: '0 -1px calc(-1px - 0.01em) -1px',
    // [1]
    paddingBottom: '0.01em',
    // Necessary to prevent margin collapse of last-child
    paddingTop: '0.01em' // Necessary to prevent margin collapse of first-child

  };
});
/*
 * CardFooter can have children like CardBlock and CardActions. When those
 * components are used directly inside Card they have a specific top/bottom
 * margin, but when they're used within CardFooter, they have a different
 * top/bottom margin. This technique accomplishes that without writing a bunch
 * of descendant selectors.
 */

exports.CardFooterRoot = CardFooterRoot;

var footerTheme = function footerTheme(_ref2) {
  var theme = _ref2.theme;
  return {
    CardRow_marginVertical: (0, _themes2.cardFooterTheme)(theme).CardFooterRow_marginVertical,
    CardRow_marginVerticalLast: (0, _themes2.cardFooterTheme)(theme).CardFooterRow_marginVerticalLast
  };
};
/*
 * We shouldn't just create a themed 'div', because it won't be able to apply
 * the provided theme to itself, which breaks the expectation of
 * themed. So, we theme a simple functional component that
 * returns a 'div' instead.
 */


var CardFooterContent = (0, _themes.themed)(function (props) {
  return (0, _core.jsx)("div", props);
})(footerTheme);
exports.CardFooterContent = CardFooterContent;
var CardFooterTitle = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "e1roqw6v8"
})(function (props) {
  var theme = _objectSpread({}, (0, _themes2.cardFooterTheme)(props.theme), (0, _themes2.cardTheme)(props.theme));

  return {
    alignItems: 'flex-start',
    display: 'flex',
    marginBottom: theme.CardFooterRow_marginVertical,
    marginTop: theme.CardFooterRow_marginVertical,
    paddingLeft: theme.CardRow_paddingHorizontal,
    paddingRight: theme.CardRow_paddingHorizontal
  };
});
exports.CardFooterTitle = CardFooterTitle;
var CardFooterTitleContent = (
/*#__PURE__*/
0, _styledBase.default)('h4', {
  target: "e1roqw6v9"
})(function (props) {
  var theme = (0, _themes2.cardFooterTheme)(props.theme);
  return {
    color: theme.CardFooterTitle_color,
    flex: '1 1 auto',
    fontSize: theme.CardFooterTitle_fontSize,
    fontWeight: theme.CardFooterTitle_fontWeight,
    margin: 0
  };
});
exports.CardFooterTitleContent = CardFooterTitleContent;
var CardFooterToggleButton = (0, _withProps.default)({
  type: 'button'
})((
/*#__PURE__*/
0, _styledBase.default)(_Button.default, {
  target: "e1roqw6v10"
})(
/*
 * A large Button, even with zero'd padding, is still a bit too large in this
 * context. These styles allow the Button to shrink, but the Icon remains the
 * same size.
 */
function (_ref3) {
  var theme = _ref3.theme,
      variant = _ref3.variant;
  return _objectSpread({
    flex: '0 0 auto',
    height: 'auto',
    minWidth: 0,
    overflow: 'hidden',
    padding: 0,
    transform: "translateY(-" + (0, _styles.pxToEm)(1) + ")"
  }, variant ? {
    '&:hover': {
      backgroundColor: theme["backgroundColor_" + variant + "_hover"]
    }
  } : undefined, {
    // Inner
    '& > span': {
      display: 'block',
      margin: "-" + (0, _styles.pxToEm)(4)
    },
    // Icon
    '& [role="img"]': {
      color: theme.icon_color
    }
  });
}));
exports.CardFooterToggleButton = CardFooterToggleButton;
var CardImageRoot = (
/*#__PURE__*/
0, _styledBase.default)('img', {
  target: "e1roqw6v11"
})(function (props) {
  var _ref4;

  var theme = (0, _themes2.cardTheme)(props.theme);
  return _ref4 = {
    display: 'block',
    marginBottom: theme.CardRow_marginVertical,
    marginTop: theme.CardRow_marginVertical,
    maxWidth: '100%'
  }, _ref4['&:first-child' + _emotion.ignoreSsrWarning] = {
    borderRadius: theme.Card_borderRadius + " " + theme.Card_borderRadius + " 0 0",
    marginTop: 0
  }, _ref4['&:last-child'] = {
    borderRadius: "0 0 " + theme.Card_borderRadius + " " + theme.Card_borderRadius,
    marginBottom: 0
  }, _ref4;
});
exports.CardImageRoot = CardImageRoot;
var CardStatusRoot = (
/*#__PURE__*/
0, _styledBase.default)(CardRow, {
  target: "e1roqw6v12"
})(function (_ref5) {
  var baseTheme = _ref5.theme,
      variant = _ref5.variant;
  var theme = (0, _themes2.cardStatusTheme)(baseTheme);
  var rtl = theme.direction === 'rtl';
  return {
    alignItems: 'center',
    color: theme["color_" + variant],
    display: 'flex',
    fontSize: theme.CardStatus_fontSize,
    fontWeight: theme.CardStatus_fontWeight,
    '& > [role="img"]': {
      height: theme.CardStatusIcon_size,
      marginRight: rtl ? null : theme.CardStatusIcon_margin,
      marginLeft: rtl ? theme.CardStatusIcon_margin : null,
      width: theme.CardStatusIcon_size
    }
  };
});
exports.CardStatusRoot = CardStatusRoot;
var CardTitleRoot = (
/*#__PURE__*/
0, _styledBase.default)(CardRow, {
  target: "e1roqw6v13"
})({
  name: "k008qs",
  styles: "display:flex;"
});
exports.CardTitleRoot = CardTitleRoot;
var CardTitleAvatar = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  target: "e1roqw6v14"
})(function (_ref6) {
  var subtitle = _ref6.subtitle,
      baseTheme = _ref6.theme;
  var theme = (0, _themes2.cardTitleTheme)(baseTheme);
  var rtl = theme.direction === 'rtl';
  var width = subtitle ? theme.CardTitleAvatarSize_large : theme.CardTitleAvatarSize;
  return {
    flex: '0 0 auto',
    marginLeft: rtl ? theme.CardTitleAvatar_margin : null,
    marginRight: rtl ? null : theme.CardTitleAvatar_margin,
    width: width,
    '&[class] > *': {
      height: 'auto',
      width: '100%'
    }
  };
});
exports.CardTitleAvatar = CardTitleAvatar;
var CardTitleInner = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "e1roqw6v15"
})({
  name: "11qjisw",
  styles: "flex:1 1 auto;"
});
exports.CardTitleInner = CardTitleInner;
var CardTitleSecondaryText = (
/*#__PURE__*/
0, _styledBase.default)('span', {
  target: "e1roqw6v16"
})(function (props) {
  var theme = (0, _themes2.cardTitleTheme)(props.theme);
  var fontSize = theme.CardTitleSecondaryText_fontSize;
  return _objectSpread({
    color: theme.CardTitleSecondaryText_color,
    flex: '0 0 auto',
    fontSize: fontSize,
    fontWeight: theme.CardTitleSecondaryText_fontWeight,
    transform: "translateY(" + (0, _styles.getNormalizedValue)((0, _styles.pxToEm)(5), fontSize) + ")"
  }, {
    display: "inline-block",
    maxWidth: "33%",
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    wordWrap: "normal"
  });
});
exports.CardTitleSecondaryText = CardTitleSecondaryText;
var CardTitleSubtitle = (
/*#__PURE__*/
0, _styledBase.default)('h4', {
  target: "e1roqw6v17"
})(function (_ref7) {
  var avatar = _ref7.avatar,
      baseTheme = _ref7.theme;
  var theme = (0, _themes2.cardTitleTheme)(baseTheme);
  var fontSize = theme.CardSubtitle_fontSize;
  return {
    color: theme.CardSubtitle_color,
    fontSize: fontSize,
    fontWeight: theme.CardSubtitle_fontWeight,
    margin: 0,
    marginTop: avatar ? null : (0, _styles.getNormalizedValue)(theme.CardSubtitle_marginTop, fontSize)
  };
});
exports.CardTitleSubtitle = CardTitleSubtitle;
var CardTitleTitle = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "e1roqw6v18"
})(function (_ref8) {
  var baseTheme = _ref8.theme,
      variant = _ref8.variant;
  var theme = (0, _themes2.cardTitleTheme)(baseTheme);
  var rtl = theme.direction === 'rtl';
  return {
    alignItems: 'flex-start',
    display: 'flex',
    '& > [role="img"]': {
      color: variant ? theme["icon_color_" + variant] : null,
      flex: '0 0 auto',
      marginLeft: rtl ? theme.CardTitleIcon_margin : null,
      marginRight: rtl ? null : theme.CardTitleIcon_margin,
      position: 'relative',
      top: (0, _styles.pxToEm)(4) // optical alignment

    }
  };
});
exports.CardTitleTitle = CardTitleTitle;
var CardTitleTitleContent = (
/*#__PURE__*/
0, _styledBase.default)('h3', {
  target: "e1roqw6v19"
})(function (_ref9) {
  var actions = _ref9.actions,
      baseTheme = _ref9.theme;
  var theme = (0, _themes2.cardTitleTheme)(baseTheme);
  var rtl = theme.direction === 'rtl';
  var fontSize = theme.CardTitle_fontSize;
  var actionsMargin = (0, _styles.getNormalizedValue)(theme.CardTitleIcon_margin, fontSize);
  return {
    color: theme.CardTitle_color,
    flex: '1 1 auto',
    fontSize: fontSize,
    fontWeight: theme.CardTitle_fontWeight,
    margin: 0,
    marginLeft: actions && rtl ? actionsMargin : null,
    marginRight: actions && !rtl ? actionsMargin : null
  };
});
exports.CardTitleTitleContent = CardTitleTitleContent;
var CardTitleMenuButton = (0, _withProps.default)({
  type: 'button'
})((
/*#__PURE__*/
0, _styledBase.default)(_Button.default, {
  target: "e1roqw6v20"
})(
/*
 * A large Button, even with zero'd padding, is still a bit too large in this
 * context. These styles allow the Button to shrink, but the Icon remains the
 * same size.
 */
function (_ref10) {
  var theme = _ref10.theme;
  return {
    height: 'auto',
    minWidth: 0,
    overflow: 'hidden',
    padding: 0,
    // Inner
    '& > span': {
      display: 'block',
      margin: "-" + (0, _styles.pxToEm)(2)
    },
    // Icon
    '& [role="img"]': {
      color: theme.icon_color
    }
  };
}));
exports.CardTitleMenuButton = CardTitleMenuButton;