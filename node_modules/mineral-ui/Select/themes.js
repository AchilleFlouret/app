"use strict";

exports.__esModule = true;
exports.selectTriggerTheme = exports.selectTheme = void 0;

var _themes = require("../themes");

var _Dropdown = require("../Dropdown");

var _TextInput = require("../TextInput");

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// $FlowFixMe - strict theme keys incompatible with mapComponentThemes
var selectTheme = function selectTheme(baseTheme) {
  return (0, _themes.mapComponentThemes)({
    name: 'Dropdown',
    theme: (0, _Dropdown.dropdownTheme)(baseTheme)
  }, {
    name: 'Select',
    theme: {}
  }, _objectSpread({}, selectTriggerTheme(baseTheme), baseTheme));
}; // $FlowFixMe - strict theme keys incompatible with mapComponentThemes


exports.selectTheme = selectTheme;

var selectTriggerTheme = function selectTriggerTheme(baseTheme) {
  return (0, _themes.mapComponentThemes)({
    name: 'TextInput',
    theme: (0, _TextInput.textInputTheme)(baseTheme)
  }, {
    name: 'Select',
    theme: {
      Select_height_small: baseTheme.size_small,
      Select_height_medium: baseTheme.size_medium,
      Select_height_large: baseTheme.size_large,
      Select_height_jumbo: baseTheme.size_jumbo,
      SelectIcon_color: baseTheme.icon_color_theme
    }
  }, baseTheme);
};

exports.selectTriggerTheme = selectTriggerTheme;