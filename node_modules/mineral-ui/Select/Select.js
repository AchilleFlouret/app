"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

var _reactFastCompare = _interopRequireDefault(require("react-fast-compare"));

var _memoizeOne = _interopRequireDefault(require("memoize-one"));

var _scrollIntoViewIfNeeded = _interopRequireDefault(require("scroll-into-view-if-needed"));

var _utils = require("../utils");

var _ModifiersContext = _interopRequireDefault(require("../Dialog/ModifiersContext"));

var _ItemMatcher = _interopRequireDefault(require("../Dropdown/ItemMatcher"));

var _Menu = _interopRequireWildcard(require("../Menu/Menu"));

var _MenuItem = _interopRequireDefault(require("../Menu/MenuItem"));

var _SelectTrigger = _interopRequireDefault(require("./SelectTrigger"));

var _constants = require("./constants");

var _styled = require("./styled");

var _propTypes = require("./propTypes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Select =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(Select, _Component);

  function Select() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "state", {
      highlightedIndex: _this.props.defaultHighlightedIndex,
      isOpen: Boolean(_this.props.defaultIsOpen),
      selectedItem: _this.props.defaultSelectedItem
    });

    _defineProperty(_assertThisInitialized(_this), "id", _this.props.id || "select-" + (0, _utils.generateId)());

    _defineProperty(_assertThisInitialized(_this), "itemMatcher", void 0);

    _defineProperty(_assertThisInitialized(_this), "items", void 0);

    _defineProperty(_assertThisInitialized(_this), "getItems", (0, _memoizeOne.default)(_Menu.getItems, _reactFastCompare.default));

    _defineProperty(_assertThisInitialized(_this), "selectTrigger", void 0);

    _defineProperty(_assertThisInitialized(_this), "getStateAndHelpers", function () {
      return {
        state: {
          highlightedIndex: _this.getControllableValue('highlightedIndex'),
          isOpen: _this.getControllableValue('isOpen'),
          selectedItem: _this.getControllableValue('selectedItem')
        },
        helpers: {
          close: _this.close,
          focusTrigger: _this.focusTrigger,
          open: _this.open
        }
      };
    });

    _defineProperty(_assertThisInitialized(_this), "setTriggerRef", function (node) {
      var triggerRef = _this.props.triggerRef;
      _this.selectTrigger = node;
      triggerRef && triggerRef(node);
    });

    _defineProperty(_assertThisInitialized(_this), "getContentId", function () {
      return _this.id + "-content";
    });

    _defineProperty(_assertThisInitialized(_this), "getMenuItemId", function (index) {
      return _this.id + "-item-" + index;
    });

    _defineProperty(_assertThisInitialized(_this), "getTriggerProps", function (props) {
      var _objectSpread2;

      if (props === void 0) {
        props = {};
      }

      var isOpen = _this.getControllableValue('isOpen');

      var selectedItem = _this.getControllableValue('selectedItem');

      var _this$props = _this.props,
          disabled = _this$props.disabled,
          invalid = _this$props.invalid,
          name = _this$props.name,
          placeholder = _this$props.placeholder,
          readOnly = _this$props.readOnly,
          trigger = _this$props.trigger,
          required = _this$props.required,
          size = _this$props.size,
          variant = _this$props.variant;
      var refKey = trigger ? 'ref' : 'triggerRef';
      return _objectSpread({}, (0, _utils.isRenderProp)(trigger) ? props : {}, (_objectSpread2 = {
        'aria-haspopup': 'listbox',
        'aria-invalid': invalid,
        'aria-readonly': readOnly,
        'aria-required': required,
        disabled: disabled,
        isOpen: isOpen,
        item: selectedItem,
        name: name,
        placeholder: placeholder,
        readOnly: readOnly,
        size: size,
        tabIndex: !disabled ? 0 : undefined
      }, _objectSpread2[refKey] = _this.setTriggerRef, _objectSpread2.variant = variant, _objectSpread2), !(0, _utils.isRenderProp)(trigger) ? props : {}, !readOnly ? {
        onKeyDown: _this.onTriggerKeyDown
      } : {});
    });

    _defineProperty(_assertThisInitialized(_this), "renderTrigger", function (_temp) {
      var _ref = _temp === void 0 ? {} : _temp,
          props = _ref.props;

      var trigger = _this.props.trigger;

      if ((0, _utils.isRenderProp)(trigger)) {
        return trigger(_objectSpread({}, _this.getStateAndHelpers(), {
          props: _this.getTriggerProps(props)
        }));
      }

      return (0, _core.jsx)(_SelectTrigger.default, _this.getTriggerProps(props));
    });

    _defineProperty(_assertThisInitialized(_this), "getMenuProps", function (props) {
      if (props === void 0) {
        props = {};
      }

      var itemKey = _this.props.itemKey;
      return _objectSpread({}, props, {
        itemKey: itemKey,
        role: 'listbox',
        item: _this.renderItem
      });
    });

    _defineProperty(_assertThisInitialized(_this), "renderMenu", function (_temp2) {
      var _ref2 = _temp2 === void 0 ? {} : _temp2,
          props = _ref2.props;

      var menu = _this.props.menu;

      if ((0, _utils.isRenderProp)(menu)) {
        return menu(_objectSpread({}, _this.getStateAndHelpers(), {
          props: _this.getMenuProps(props)
        }));
      }

      return (0, _core.jsx)(_Menu.default, _this.getMenuProps(props));
    });

    _defineProperty(_assertThisInitialized(_this), "getItemProps", function (props) {
      if (props === void 0) {
        props = {};
      }

      var highlightedIndex = _this.getControllableValue('highlightedIndex');

      var selectedItem = _this.getControllableValue('selectedItem');

      var _props = props,
          itemProps = _props.props;
      var index = itemProps.index,
          item = itemProps.item;
      return _objectSpread({}, itemProps, item, {
        'aria-selected': selectedItem ? selectedItem.value === item.value : false,
        'aria-disabled': _this.props.disabled || item.disabled,
        children: item.text,
        id: _this.getMenuItemId(index),
        isHighlighted: highlightedIndex === index,
        role: 'option',
        tabIndex: null,
        // Unset tabIndex because we use arrow keys to navigate instead
        onClick: (0, _utils.composeEventHandlers)(item.onClick, _this.onSelect.bind(null, item))
      });
    });

    _defineProperty(_assertThisInitialized(_this), "renderItem", function (props) {
      if (props === void 0) {
        props = {};
      }

      var item = _this.props.item;

      if ((0, _utils.isRenderProp)(item)) {
        return item(_objectSpread({}, props, _this.getStateAndHelpers(), {
          props: _this.getItemProps(props)
        }));
      }

      return (0, _core.jsx)(_MenuItem.default, _this.getItemProps(props));
    });

    _defineProperty(_assertThisInitialized(_this), "getHighlightedOrSelectedIndex", function () {
      var isOpen = _this.getControllableValue('isOpen');

      var selectedItem = _this.getControllableValue('selectedItem');

      var highlightedIndex = _this.getControllableValue('highlightedIndex');

      if (isOpen && selectedItem && (highlightedIndex === null || highlightedIndex === undefined)) {
        return _this.items.indexOf(selectedItem);
      }

      return highlightedIndex;
    });

    _defineProperty(_assertThisInitialized(_this), "getHighlightedItemId", function () {
      var highlightedIndex = _this.getControllableValue('highlightedIndex');

      return highlightedIndex !== undefined && highlightedIndex !== null ? _this.getMenuItemId(highlightedIndex) : undefined;
    });

    _defineProperty(_assertThisInitialized(_this), "onTriggerKeyDown", function (event) {
      // $FlowFixMe
      event.nativeEvent.preventMineralDefault = true;
      var key = event.key;

      var isOpen = _this.getControllableValue('isOpen');

      if (key === 'ArrowUp') {
        event.preventDefault();

        _this.highlightPreviousItem();

        !isOpen && _this.open(event);
      } else if (key === 'ArrowDown') {
        event.preventDefault();

        _this.highlightNextItem();

        !isOpen && _this.open(event);
      } else if (key === 'Home' && isOpen) {
        event.preventDefault();

        _this.highlightItemAtIndex(0);
      } else if (key === 'End' && isOpen) {
        event.preventDefault();

        _this.highlightItemAtIndex(_this.items.length - 1);
      } else if (key === 'Enter' || key === ' ') {
        event.preventDefault();
        isOpen ? _this.clickHighlightedItem() : _this.open(event);
      } else if (isOpen) {
        _this.highlightItemMatchingKey(key);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "findItemMatchingKey", function (key) {
      _this.itemMatcher = _this.itemMatcher || new _ItemMatcher.default();
      return _this.itemMatcher.findMatchingItem(_this.items, _this.getControllableValue('highlightedIndex'), key);
    });

    _defineProperty(_assertThisInitialized(_this), "highlightItemMatchingKey", function (key) {
      var matchingItem = _this.findItemMatchingKey(key);

      matchingItem && _this.highlightItemAtIndex(_this.items.indexOf(matchingItem));
    });

    _defineProperty(_assertThisInitialized(_this), "highlightItemAtIndex", function (index) {
      if (!_this.isControlled('highlightedIndex')) {
        _this.setState({
          highlightedIndex: index
        }, _this.scrollHighlightedItemIntoViewIfNeeded);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "highlightNextItem", function () {
      if (!_this.isControlled('highlightedIndex')) {
        _this.setState(function (prevState) {
          return {
            highlightedIndex: prevState.highlightedIndex === null || prevState.highlightedIndex === undefined ? prevState.selectedItem ? _this.items.indexOf(prevState.selectedItem) : 0 : prevState.highlightedIndex === _this.items.length - 1 ? 0 : prevState.highlightedIndex + 1
          };
        }, _this.scrollHighlightedItemIntoViewIfNeeded);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "highlightPreviousItem", function () {
      if (!_this.isControlled('highlightedIndex')) {
        _this.setState(function (prevState) {
          return {
            highlightedIndex: prevState.highlightedIndex === null || prevState.highlightedIndex === undefined ? prevState.selectedItem ? _this.items.indexOf(prevState.selectedItem) : _this.items.length - 1 : prevState.highlightedIndex === 0 ? _this.items.length - 1 : prevState.highlightedIndex - 1
          };
        }, _this.scrollHighlightedItemIntoViewIfNeeded);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "highlightDefaultItem", function () {
      if (!_this.isControlled('highlightedIndex')) {
        _this.setState(function (prevState) {
          var selectedItem = _this.isControlled('selectedItem') ? _this.props.selectedItem : prevState.selectedItem;
          return {
            highlightedIndex: selectedItem ? _this.items.indexOf(selectedItem) : prevState.highlightedIndex ? prevState.highlightedIndex : 0
          };
        }, _this.scrollHighlightedItemIntoViewIfNeeded);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "scrollHighlightedItemIntoViewIfNeeded", function () {
      var boundary = global.document.getElementById(_this.getContentId());
      var highlightedItemNode = boundary && global.document.getElementById(_this.getHighlightedItemId());

      if (highlightedItemNode) {
        (0, _scrollIntoViewIfNeeded.default)(highlightedItemNode, {
          boundary: boundary
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "clickHighlightedItem", function () {
      var highlightedItemNode = global.document.getElementById(_this.getHighlightedItemId());
      highlightedItemNode && highlightedItemNode.click();
    });

    _defineProperty(_assertThisInitialized(_this), "onSelect", function (item, event) {
      var prevSelectedItem = _this.getControllableValue('selectedItem');

      var stateToSet;

      if (!_this.isControlled('selectedItem')) {
        stateToSet = {
          selectedItem: item
        };
      }

      if (!_this.isControlled('highlightedIndex')) {
        stateToSet = _objectSpread({}, stateToSet, {
          highlightedIndex: _this.items.indexOf(item)
        });
      }

      if (stateToSet) {
        _this.setState(stateToSet, function () {
          _this.onSelectActions(item, prevSelectedItem, event);
        });
      } else {
        _this.onSelectActions(item, prevSelectedItem, event);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onSelectActions", function (item, prevSelectedItem, event) {
      _this.props.onSelect && _this.props.onSelect(item, event);

      if (prevSelectedItem !== item) {
        _this.onChange(item, event);
      }

      _this.close(event);

      _this.focusTrigger();
    });

    _defineProperty(_assertThisInitialized(_this), "onChange", function (item, event) {
      _this.props.onChange && _this.props.onChange(item, event);
    });

    _defineProperty(_assertThisInitialized(_this), "focusTrigger", function () {
      var node = _this.selectTrigger;
      node && node.focus();
    });

    _defineProperty(_assertThisInitialized(_this), "open", function (event) {
      _this.highlightDefaultItem();

      if (_this.isControlled('isOpen')) {
        _this.openActions(event);
      } else {
        _this.setState(function () {
          return {
            isOpen: true
          };
        }, function () {
          _this.openActions(event);
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "openActions", function (event) {
      _this.props.onOpen && _this.props.onOpen(event);
    });

    _defineProperty(_assertThisInitialized(_this), "close", function (event) {
      if (!_this.isControlled('highlightedIndex')) {
        _this.setState({
          highlightedIndex: null
        });
      }

      if (_this.isControlled('isOpen')) {
        _this.closeActions(event);
      } else {
        _this.setState(function () {
          return {
            isOpen: false
          };
        }, function () {
          _this.closeActions(event);
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "closeActions", function (event) {
      _this.props.onClose && _this.props.onClose(event);
    });

    _defineProperty(_assertThisInitialized(_this), "isControlled", function (prop) {
      return _this.props.hasOwnProperty(prop);
    });

    _defineProperty(_assertThisInitialized(_this), "getControllableValue", function (key) {
      return _this.isControlled(key) ? _this.props[key] : _this.state[key];
    });

    return _this;
  }

  var _proto = Select.prototype;

  _proto.render = function render() {
    var _this2 = this;

    return (0, _core.jsx)(_ModifiersContext.default.Consumer, null, function (contextModifiers) {
      var _this2$props = _this2.props,
          data = _this2$props.data,
          disabled = _this2$props.disabled,
          modifiers = _this2$props.modifiers,
          ignoreName = _this2$props.name,
          ignorePlaceholder = _this2$props.placeholder,
          readOnly = _this2$props.readOnly,
          ignoreRequired = _this2$props.required,
          ignoreSize = _this2$props.size,
          trigger = _this2$props.trigger,
          restProps = _objectWithoutPropertiesLoose(_this2$props, ["data", "disabled", "modifiers", "name", "placeholder", "readOnly", "required", "size", "trigger"]);

      var isOpen = _this2.getControllableValue('isOpen');

      _this2.items = _this2.getItems(data);

      var rootProps = _objectSpread({}, restProps, {
        id: _this2.id,
        data: data,
        disabled: disabled || readOnly,
        highlightedIndex: _this2.getHighlightedOrSelectedIndex(),
        isOpen: isOpen,
        modifiers: _objectSpread({
          contentWidth: _styled.contentWidthModifier
        }, modifiers || contextModifiers),
        onClose: _this2.close,
        onOpen: _this2.open,
        menu: _this2.renderMenu
      });

      return (0, _core.jsx)(_styled.SelectRoot, rootProps, (0, _utils.isRenderProp)(trigger) ? _this2.renderTrigger : _this2.renderTrigger());
    });
  };

  return Select;
}(_react.Component);

exports.default = Select;

_defineProperty(Select, "displayName", 'Select');

_defineProperty(Select, "defaultProps", {
  itemKey: 'value',
  placeholder: 'Select...',
  placement: _constants.PLACEMENT['bottom-start'],
  size: _constants.SIZE.large
});

Select.propTypes = process.env.NODE_ENV !== "production" ? _propTypes.selectPropTypes : {};