"use strict";

exports.__esModule = true;
exports.DropdownContentWrapper = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _styles = require("../styles");

var _themes = require("./themes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DropdownContentWrapper = (
/*#__PURE__*/
0, _styledBase.default)('div', {
  target: "etta0te0"
})(function (_ref) {
  var baseTheme = _ref.theme,
      wide = _ref.wide;
  var theme = (0, _themes.dropdownContentTheme)(baseTheme);
  return _objectSpread({}, (0, _styles.componentStyleReset)(baseTheme), {
    backgroundColor: theme.DropdownContent_backgroundColor,
    border: "1px solid " + theme.DropdownContent_borderColor,
    borderRadius: theme.DropdownContent_borderRadius,
    boxShadow: theme.DropdownContent_boxShadow,
    maxHeight: '30vh',
    overflowY: 'auto',
    userSelect: 'none',
    width: wide ? (0, _styles.pxToEm)(344) : (0, _styles.pxToEm)(224),
    zIndex: theme.DropdownContent_zIndex,
    '&[data-placement^="top"]': {
      marginBottom: theme.DropdownContent_margin
    },
    '&[data-placement^="bottom"]': {
      marginTop: theme.DropdownContent_margin
    },
    '&[data-placement^="left"]': {
      marginRight: theme.DropdownContent_margin
    },
    '&[data-placement^="right"]': {
      marginLeft: theme.DropdownContent_margin
    },
    '&[data-out-of-boundaries]': {
      visibility: 'hidden'
    }
  });
});
exports.DropdownContentWrapper = DropdownContentWrapper;