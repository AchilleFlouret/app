"use strict";

exports.__esModule = true;
exports.Link = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _isPropValid = _interopRequireDefault(require("@emotion/is-prop-valid"));

var _themes = require("./themes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Link = (
/*#__PURE__*/
0, _styledBase.default)('a', {
  shouldForwardProp: function shouldForwardProp(prop) {
    return (0, _isPropValid.default)(prop);
  },
  target: "e19l42ga0"
})(function (_ref) {
  var variant = _ref.variant,
      baseTheme = _ref.theme;
  var theme = (0, _themes.linkTheme)(baseTheme);

  if (variant) {
    // prettier-ignore
    theme = _objectSpread({}, theme, {
      Link_borderColor_focus: baseTheme["borderColor_" + variant + "_focus"],
      Link_color: baseTheme["color_" + variant],
      Link_color_hover: baseTheme["color_" + variant + "_hover"],
      Link_color_focus: baseTheme["color_" + variant + "_focus"],
      Link_color_active: baseTheme["color_" + variant + "_active"]
    });
  }

  return {
    color: theme.Link_color,
    textDecoration: 'none',
    '&:hover': {
      color: theme.Link_color_hover,
      textDecoration: 'underline'
    },
    '&:focus': {
      color: theme.Link_color_focus,
      outline: "1px solid " + theme.Link_borderColor_focus,
      outlineOffset: '2px'
    },
    // `:active` must be last, to follow LVHFA order:
    // https://developer.mozilla.org/en-US/docs/Web/CSS/:active
    '&:active': {
      color: theme.Link_color_active
    }
  };
});
exports.Link = Link;