"use strict";

exports.__esModule = true;
exports.choiceGroupTheme = exports.choiceTheme = void 0;

var _styles = require("../styles");

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var choiceTheme = function choiceTheme(baseTheme) {
  var colors = {
    background: baseTheme.input_backgroundColor,
    regular: baseTheme.borderColor,
    checked: baseTheme.borderColor_theme,
    focus: baseTheme.borderColor_theme_focus,
    hover: baseTheme.borderColor_theme_hover
  }; // prettier-ignore

  return _objectSpread({
    ChoiceControl_backgroundColor: colors.background,
    ChoiceControl_backgroundColor_checked: colors.checked,
    ChoiceControl_backgroundColor_checkedHover: colors.hover,
    ChoiceControl_borderColor: colors.regular,
    ChoiceControl_borderColor_hover: colors.hover,
    ChoiceControl_borderColor_checked: colors.checked,
    ChoiceControl_borderColor_checkedHover: colors.hover,
    ChoiceControl_borderRadius: baseTheme.borderRadius_1,
    ChoiceControl_boxShadow_focus: "0 0 0 1px " + baseTheme.boxShadow_focusInner + ", 0 0 0 2px " + colors.focus,
    ChoiceControl_size: (0, _styles.pxToEm)(16),
    ChoiceControl_size_jumbo: (0, _styles.pxToEm)(24),
    ChoiceText_color: baseTheme.color,
    ChoiceText_fontSize: baseTheme.fontSize_ui,
    ChoiceText_fontSize_small: (0, _styles.pxToEm)(12),
    ChoiceText_marginHorizontal: baseTheme.space_inline_md
  }, baseTheme);
};

exports.choiceTheme = choiceTheme;

var choiceGroupTheme = function choiceGroupTheme(baseTheme) {
  return _objectSpread({
    ChoiceGroupControl_marginHorizontal_inline: baseTheme.space_inline_xl,
    ChoiceGroupControl_marginVertical_stacked: baseTheme.space_stack_md,
    ChoiceGroupControl_marginVertical_stackedJumbo: baseTheme.space_stack_lg
  }, baseTheme);
};

exports.choiceGroupTheme = choiceGroupTheme;