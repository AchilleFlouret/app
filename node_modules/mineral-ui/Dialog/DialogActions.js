"use strict";

exports.__esModule = true;
exports.default = void 0;

var _core = require("@emotion/core");

var _react = _interopRequireWildcard(require("react"));

var _Button = _interopRequireDefault(require("../Button"));

var _children = require("../utils/children");

var _styled = require("./styled");

var _propTypes = require("./propTypes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var DialogActions = function DialogActions(props) {
  var children = props.children,
      variant = props.variant,
      rootProps = _objectWithoutPropertiesLoose(props, ["children", "variant"]);

  var actions = (0, _children.findAllByType)(children, _Button.default);

  if (actions && actions.length) {
    var lastIndex = actions.length - 1;
    actions = actions.map(function (action, index) {
      var props = action.props;
      return (0, _react.cloneElement)(action, {
        key: index,
        minimal: props.minimal !== undefined ? props.minimal : index !== lastIndex,
        primary: props.primary !== undefined ? props.primary : index === lastIndex,
        variant: props.variant !== undefined ? props.variant : index === lastIndex ? variant : undefined
      });
    });
  }

  return (0, _core.jsx)(_styled.DialogActionsRoot, rootProps, actions);
};

DialogActions.displayName = 'DialogActions';
DialogActions.propTypes = process.env.NODE_ENV !== "production" ? _propTypes.dialogActionsPropTypes : {};
var _default = DialogActions;
exports.default = _default;